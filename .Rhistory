(analysis_a_plot_1 + descriptive_theory_plot )/ (rm_musical_plot + model_3_figure) +
plot_annotation(title = "Regression Model Analysis", tag_levels = "A")-> compound_plot
compound_plot
ggsave(filename = "img/Figures/Figure2.png", height = 9, width = 13, units = "in", dpi = 300)
(analysis_a_plot_1 + descriptive_theory_plot )/ (rm_musical_plot + model_3_figure) +
plot_annotation(title = "Regression Model Analysis", tag_levels = "A") &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 8, hjust = 0, vjust = 0)) -> compound_plot
compound_plot
(analysis_a_plot_1 + descriptive_theory_plot )/ (rm_musical_plot + model_3_figure) +
plot_annotation(title = "Regression Model Analysis", tag_levels = "A") &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 15, hjust = 0, vjust = 0)) -> compound_plot
compound_plot
ggsave(filename = "img/Figures/Figure2.png", height = 9, width = 13, units = "in", dpi = 300)
# ALL MODELS HERE
tab_model(chord_cat_rm, musical_training_rm, all_musical_indv_theory_model)
means_a %>%
mutate(labz = factor(labz,
levels = c("Chromatic Predominant","Diatonic Predominant","Bridge Chords", "Non Predominant"))) %>%
ggplot(aes(y = means, x = labz)) +
geom_bar(stat = "identity") +
geom_bracket(
xmin = c("Bridge Chords","Bridge Chords", "Non Predominant","Non Predominant"),
xmax = c("Chromatic Predominant","Diatonic Predominant","Chromatic Predominant","Diatonic Predominant"),
y.position = c(6, 7, 8 , 6), label = c("***"),
tip.length = 0.1) +
#  geom_errorbar(aes(ymin = means - std_errors, ymax = means+std_errors)) +
labs(x = "Chord Category", y = "Adjusted Means", title = "Chord Category Model") +
theme_minimal() -> analysis_a_plot_1
analysis_a_plot_1
means_a %>%
mutate(labz = factor(labz,
levels = c("Chromatic Predominant","Diatonic Predominant","Bridge Chords", "Non Predominant"))) %>%
ggplot(aes(y = means, x = labz)) +
geom_bar(stat = "identity") +
geom_bracket(
xmin = c("Bridge Chords","Bridge Chords", "Non Predominant","Non Predominant"),
xmax = c("Chromatic Predominant","Diatonic Predominant","Chromatic Predominant","Diatonic Predominant"),
y.position = c(7, 6, 8 , 6), label = c("***"),
tip.length = 0.1) +
#  geom_errorbar(aes(ymin = means - std_errors, ymax = means+std_errors)) +
labs(x = "Chord Category", y = "Adjusted Means", title = "Chord Category Model") +
theme_minimal() -> analysis_a_plot_1
analysis_a_plot_1
means_a %>%
mutate(labz = factor(labz,
levels = c("Chromatic Predominant","Diatonic Predominant","Bridge Chords", "Non Predominant"))) %>%
ggplot(aes(y = means, x = labz)) +
geom_bar(stat = "identity") +
geom_bracket(
xmin = c("Bridge Chords","Bridge Chords", "Non Predominant","Non Predominant"),
xmax = c("Chromatic Predominant","Diatonic Predominant","Chromatic Predominant","Diatonic Predominant"),
y.position = c(7, 6, 8 , 6.5), label = c("***"),
tip.length = 0.1) +
#  geom_errorbar(aes(ymin = means - std_errors, ymax = means+std_errors)) +
labs(x = "Chord Category", y = "Adjusted Means", title = "Chord Category Model") +
theme_minimal() -> analysis_a_plot_1
analysis_a_plot_1
means_a %>%
mutate(labz = factor(labz,
levels = c("Chromatic Predominant","Diatonic Predominant","Bridge Chords", "Non Predominant"))) %>%
ggplot(aes(y = means, x = labz)) +
geom_bar(stat = "identity") +
geom_bracket(
xmin = c("Bridge Chords","Bridge Chords", "Non Predominant","Non Predominant"),
xmax = c("Chromatic Predominant","Diatonic Predominant","Chromatic Predominant","Diatonic Predominant"),
y.position = c(7, 6.5, 8 , 6), label = c("***"),
tip.length = 0.1) +
#  geom_errorbar(aes(ymin = means - std_errors, ymax = means+std_errors)) +
labs(x = "Chord Category", y = "Adjusted Means", title = "Chord Category Model") +
theme_minimal() -> analysis_a_plot_1
analysis_a_plot_1
means_a %>%
mutate(labz = factor(labz,
levels = c("Chromatic Predominant","Diatonic Predominant","Bridge Chords", "Non Predominant"))) %>%
ggplot(aes(y = means, x = labz)) +
geom_bar(stat = "identity") +
geom_bracket(
xmin = c("Bridge Chords","Bridge Chords", "Non Predominant","Non Predominant"),
xmax = c("Chromatic Predominant","Diatonic Predominant","Chromatic Predominant","Diatonic Predominant"),
y.position = c(7, 6.5, 8 , 5.5), label = c("***"),
tip.length = 0.1) +
#  geom_errorbar(aes(ymin = means - std_errors, ymax = means+std_errors)) +
labs(x = "Chord Category", y = "Adjusted Means", title = "Chord Category Model") +
theme_minimal() -> analysis_a_plot_1
analysis_a_plot_1
means_a %>%
mutate(labz = factor(labz,
levels = c("Chromatic Predominant","Diatonic Predominant","Bridge Chords", "Non Predominant"))) %>%
ggplot(aes(y = means, x = labz)) +
geom_bar(stat = "identity") +
geom_bracket(
xmin = c("Bridge Chords","Bridge Chords", "Non Predominant","Non Predominant"),
xmax = c("Chromatic Predominant","Diatonic Predominant","Chromatic Predominant","Diatonic Predominant"),
y.position = c(7, 5.5, 8 , 6.5), label = c("***"),
tip.length = 0.1) +
#  geom_errorbar(aes(ymin = means - std_errors, ymax = means+std_errors)) +
labs(x = "Chord Category", y = "Adjusted Means", title = "Chord Category Model") +
theme_minimal() -> analysis_a_plot_1
analysis_a_plot_1
means_a %>%
mutate(labz = factor(labz,
levels = c("Chromatic Predominant","Diatonic Predominant","Bridge Chords", "Non Predominant"))) %>%
ggplot(aes(y = means, x = labz)) +
geom_bar(stat = "identity") +
geom_bracket(
xmin = c("Bridge Chords","Bridge Chords", "Non Predominant","Non Predominant"),
xmax = c("Chromatic Predominant","Diatonic Predominant","Chromatic Predominant","Diatonic Predominant"),
y.position = c(6, 5.5, 8 , 7), label = c("***"),
tip.length = 0.1) +
#  geom_errorbar(aes(ymin = means - std_errors, ymax = means+std_errors)) +
labs(x = "Chord Category", y = "Adjusted Means", title = "Chord Category Model") +
theme_minimal() -> analysis_a_plot_1
analysis_a_plot_1
means_a %>%
mutate(labz = factor(labz,
levels = c("Chromatic Predominant","Diatonic Predominant","Bridge Chords", "Non Predominant"))) %>%
ggplot(aes(y = means, x = labz)) +
geom_bar(stat = "identity") +
geom_bracket(
xmin = c("Bridge Chords","Bridge Chords", "Non Predominant","Non Predominant"),
xmax = c("Chromatic Predominant","Diatonic Predominant","Chromatic Predominant","Diatonic Predominant"),
y.position = c(6, 5, 8 , 7), label = c("***"),
tip.length = 0.1) +
#  geom_errorbar(aes(ymin = means - std_errors, ymax = means+std_errors)) +
labs(x = "Chord Category", y = "Adjusted Means", title = "Chord Category Model") +
theme_minimal() -> analysis_a_plot_1
analysis_a_plot_1
means_a %>%
mutate(labz = factor(labz,
levels = c("Chromatic Predominant","Diatonic Predominant","Bridge Chords", "Non Predominant"))) %>%
ggplot(aes(y = means, x = labz)) +
geom_bar(stat = "identity") +
geom_bracket(
xmin = c("Bridge Chords","Bridge Chords", "Non Predominant","Non Predominant"),
xmax = c("Chromatic Predominant","Diatonic Predominant","Chromatic Predominant","Diatonic Predominant"),
y.position = c(7, 6, 9 , 8), label = c("***"),
tip.length = 0.1) +
#  geom_errorbar(aes(ymin = means - std_errors, ymax = means+std_errors)) +
labs(x = "Chord Category", y = "Adjusted Means", title = "Chord Category Model") +
theme_minimal() -> analysis_a_plot_1
analysis_a_plot_1
# Same analysis, run with base R calculations
#chord_cat_rm_anova <- aov(mean_rating ~ chord_family + Error(participant), data = collapsed_model)
#summary(chord_cat_rm_anova)
```
### Musical Training Model
```{r}
musical_training_rm <- lmer(mean_rating ~ chord_family*i_have_had_formal_training_in_music_theory_for_years  + (1|participant),
data = collapsed_model)
summary(musical_training_rm)
anova(musical_training_rm)
r.squaredGLMM(musical_training_rm)
# Done with Musial Training SubScale of GMSI
musical_training_rm_f3 <- lmer(mean_rating ~ chord_family*f3_musical_training  + (1|participant),
data = collapsed_model)
summary(musical_training_rm_f3)
anova(musical_training_rm, musical_training_rm_f3)
anova(musical_training_rm_f3)
r.squaredGLMM(musical_training_rm_f3)
# Also run with base-R
# rm_anova_music <- aov(mean_rating ~ chord_family*i_have_had_formal_training_in_music_theory_for_years + Error(participant), data = collapsed_model)
# summary(rm_anova_music)
```
#### Figure for Musical Training Model
```{r}
library(ggeffects)
vexta = c("0","0.5","1","2","3","4 - 6","> 7")
ggpredict(musical_training_rm,
terms = c("i_have_had_formal_training_in_music_theory_for_years", "chord_family"),
type = "fe") %>%
plot(ci.style = "ribbon", colors = "bw", alpha = .05) +
labs(x = "I have had formal training in music theory for __ years", y = "Rating",
title = "Music Theory Training Model") +
scale_x_continuous(breaks = seq(1,7,1),
labels = vexta)  -> rm_musical_plot
rm_musical_plot$labels$linetype <- "Chord Category"
rm_musical_plot$data$group <- rm_musical_plot$data$group %>% str_replace_all("bridge_chords", "Bridge Chords")
rm_musical_plot$data$group <- rm_musical_plot$data$group %>% str_replace_all("not_pd", "Non predominant")
rm_musical_plot$data$group <- rm_musical_plot$data$group %>% str_replace_all("common_pd", "Diatonic Predominant")
rm_musical_plot$data$group <- rm_musical_plot$data$group %>% str_replace_all("chromatic_pd", "Chromatic Predominant")
rm_musical_plot
# Musical Training Sub Score
ggpredict(musical_training_rm_f3,
terms = c("f3_musical_training", "chord_family"),
type = "fe") %>%
plot(ci.style = "ribbon", colors = "bw", alpha = .05) +
labs(x = "Subscale: Musical Training", y = "Rating",
title = "Music Training Model (GMSI Subscale)")   -> rm_musical_plot_f3
rm_musical_plot_f3$labels$linetype <- "Chord Category"
rm_musical_plot_f3$data$group <- rm_musical_plot_f3$data$group %>% str_replace_all("bridge_chords", "Bridge Chords")
rm_musical_plot_f3$data$group <- rm_musical_plot_f3$data$group %>% str_replace_all("not_pd", "Non predominant")
rm_musical_plot_f3$data$group <- rm_musical_plot_f3$data$group %>% str_replace_all("common_pd", "Diatonic Predominant")
rm_musical_plot_f3$data$group <- rm_musical_plot_f3$data$group %>% str_replace_all("chromatic_pd", "Chromatic Predominant")
rm_musical_plot_f3
collapsed_model %>%
select(participant, f3_musical_training, i_have_had_formal_training_in_music_theory_for_years) %>%
distinct() -> cor_muscials
cor.test(cor_muscials$f3_musical_training, cor_muscials$i_have_had_formal_training_in_music_theory_for_years)
# Descriptive Panel
model_data %>%
mutate(experimental_group = as.factor(str_to_title(experimental_group))) %>%
select(experimental_group, i_have_had_formal_training_in_music_theory_for_years, participant) %>%
distinct() %>%
ggplot(aes(
x = fct_reorder(experimental_group, i_have_had_formal_training_in_music_theory_for_years),
y = i_have_had_formal_training_in_music_theory_for_years)) +
geom_jitter() +
scale_y_continuous(breaks = seq(1,7,1),
labels = vexta) +
stat_summary(fun = "mean", colour = "red", size = 2, geom = "point") +
stat_summary(fun.data = "mean_cl_boot", colour = "black", size = 1) +
coord_flip() +
labs(title = "Distribution of Music Theory Training",
subtitle = "Question 38 from Goldsmiths Musical Sophistication Index",
x = "Participant Group",
y = "I have had formal training in music theory for __ years") +
theme_minimal() -> descriptive_theory_plot
descriptive_theory_plot$data$experimental_group <- descriptive_theory_plot$data$experimental_group %>% str_replace_all("Upperclass", "Junior/Senior")
descriptive_theory_plot
all_musical_indv_theory_model <- lmer(scale(rating) ~  scale(lerdhal_tension) +
scale(parncut_roughness) + scale(semitone_voice_move) +
as.character(rootmotion) + scale(number_tendency_tones4_6) +
scale(i_have_had_formal_training_in_music_theory_for_years) +
(1+scale( i_have_had_formal_training_in_music_theory_for_years)|participant),
data = model_data)
r.squaredGLMM(all_musical_indv_theory_model)
(re.effects <- plot_model(all_musical_indv_theory_model, type = "est", show.values = TRUE,colors = c("black","black")))
levels(re.effects$data$term) <- c("Music Theory Training", "^4, ^#4, b^6, ^6" , "Root Motion",
"Semitonal Voice Leading","Chord Roughness","Chord Distance")
re.effects +
labs(title = "Musical Feature and Musical Training Model", subtitle = "Fixed Effects") +
theme_minimal() -> model_3_figure
model_3_figure
ggsave(plot = model_3_figure,
filename = "img/Figures/Figure_Model_Three_fixed_effects_.png",
height = 6, width = 9, units = "in", dpi = 300)
(analysis_a_plot_1 + descriptive_theory_plot )/ (rm_musical_plot + model_3_figure) +
plot_annotation(title = "Regression Model Analysis", tag_levels = "A") &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 15, hjust = 0, vjust = 0)) -> compound_plot
compound_plot
ggsave(filename = "img/Figures/Figure2.png", height = 9, width = 13, units = "in", dpi = 300)
re.effects
re.effects +
labs(title = "Musical Feature and Musical Training Model", subtitle = "Fixed Effects") +
theme_minimal() -> model_3_figure
model_3_figure
(re.effects <- plot_model(all_musical_indv_theory_model, type = "est", show.values = TRUE,colors = c("black","black")), value.offset = .4)
levels(re.effects$data$term) <- c("Music Theory Training", "^4, ^#4, b^6, ^6" , "Root Motion",
"Semitonal Voice Leading","Chord Roughness","Chord Distance")
(re.effects <- plot_model(all_musical_indv_theory_model, type = "est", show.values = TRUE,colors = c("black","black"),value.offset = .4))
levels(re.effects$data$term) <- c("Music Theory Training", "^4, ^#4, b^6, ^6" , "Root Motion",
"Semitonal Voice Leading","Chord Roughness","Chord Distance")
(re.effects <- plot_model(all_musical_indv_theory_model, type = "est", show.values = TRUE,colors = c("black","black"),value.offset = .25))
levels(re.effects$data$term) <- c("Music Theory Training", "^4, ^#4, b^6, ^6" , "Root Motion",
"Semitonal Voice Leading","Chord Roughness","Chord Distance")
re.effects +
labs(title = "Musical Feature and Musical Training Model", subtitle = "Fixed Effects") +
theme_minimal() -> model_3_figure
model_3_figure
ggsave(plot = model_3_figure,
filename = "img/Figures/Figure_Model_Three_fixed_effects_.png",
height = 6, width = 9, units = "in", dpi = 300)
ggsave(plot = model_3_figure,
filename = "img/Figures/Figure_Model_Three_fixed_effects_.png",
height = 6, width = 9, units = "in", dpi = 300)
(analysis_a_plot_1 + descriptive_theory_plot )/ (rm_musical_plot + model_3_figure) +
plot_annotation(title = "Regression Model Analysis", tag_levels = "A") &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 15, hjust = 0, vjust = 0)) -> compound_plot
compound_plot
ggsave(filename = "img/Figures/Figure2.png", height = 9, width = 13, units = "in", dpi = 300)
# Re-Import Tables
# Get only rating data
attraction_ratings <- response_data %>%
dplyr::select(I:`viio7/V`, group, participant)
# Demographic Data
gmsi <- read_csv("tidy_tables/gmsi_table.csv")
gmsi <- janitor::clean_names(gmsi)
gmsi <- gmsi %>%
rename(experimental_group = group,
participant = participant_no)
gmsi %>%
dplyr::select(participant, i_have_had_formal_training_in_music_theory_for_years) -> gmsi_2
attraction_ratings <- attraction_ratings %>%
left_join(gmsi_2)
chord_stimuli_data <- read_csv("tidy_tables/chord_experiment_stimuli_data.csv")
chord_stimuli_data <- chord_stimuli_data %>%
rename(chord = chord_symbol,
chord_family = group)
chord_stimuli_data <- chord_stimuli_data %>%
rename(chord = chord_symbol,
chord_family = group)
The object `attraction_ratings` now has all the ratings of the chords and the group identifier from where the rating came from.
Next, we prep and run the PCA on this data.
Experimental group is saved to be an identifier.
```{r}
# Make Exploratory Plot
pca_rec <- recipe(~., data = attraction_ratings ) %>%
update_role(group, participant, i_have_had_formal_training_in_music_theory_for_years, new_role = "id") %>%
step_normalize(all_predictors()) %>%
step_pca(all_predictors())
pca_prep <- prep(pca_rec)
pca_prep
tidied_pca <- tidy(pca_prep, 2)
chord_stimuli_data_table <- chord_stimuli_data %>%
rename(terms = chord)
tidied_pca %>%
left_join(chord_stimuli_data_table) -> tidied_pca2
tidied_pca %>%
left_join(chord_stimuli_data_table) -> tidied_pca2
Now we have scores for every single chord on every single dimension.
Want to know if our PCA was helpful at all first.
* First PC explains ~25% of variation
* Next two are also formidable
```{r}
# Extract PCA Variance
sdev <- pca_prep$steps[[2]]$res$sdev
percent_variation <- sdev^2 / sum(sdev^2)
sum(percent_variation[1:3])
sum(percent_variation[1])
sum(percent_variation[2])
sum(percent_variation[3])
tibble(
component = unique(tidied_pca$component),
percent_var = percent_variation ## use cumsum() to find cumulative, if you prefer
) %>%
mutate(component = fct_inorder(component)) %>%
ggplot(aes(component, percent_var)) +
geom_col() +
scale_y_continuous(labels = scales::percent_format()) +
labs(x = NULL, y = "Percent Variance",
title = "Cumulative Variance Explained") +
theme_minimal() +
coord_flip() -> var_explained_plot
var_explained_plot
ggsave(filename = "img/Figures/Figure_Variation_Explained.png",
height = 6, width = 9, dpi = 300, plot = var_explained_plot)
Next we plot the first five principle components with all items.
Main take aways from plot
* PC1 appears to be just general attraction rating
* All scores positive reflect the fact that all asked to do same task
* Going to look at each in depth after
```{r}
# PLOTS HERE NOT IN MANUSCRIPT
# EXCLUDE
tidied_pca2 %>%
filter(component %in% paste0("PC", 1:5)) %>%
mutate(component = fct_inorder(component)) %>%
ggplot(aes(value, terms, fill = chord_family)) +
geom_col() +
facet_wrap(~component, nrow = 1) +
labs(y = "Chord", x = "Loading", title = "First Five Principal Components") -> pc15
pc15
ggsave(filename = "img/Figures/Figure_PC1to5.png", height = 6, width = 9, dpi = 300, plot = pc15)
* PC1 is Pre Dominant Attraction
```{r}
tidied_pca2 %>%
filter(component %in% paste0("PC", 1)) %>%
mutate(component = fct_inorder(component)) %>%
mutate(value = round(value, 3)) %>%
mutate(chord_family = str_replace_all(chord_family, "_"," ")) %>%
mutate(chord_family = str_to_title(chord_family)) %>%
mutate(chord_family = str_replace_all(chord_family,"Pd","PDs")) %>%
ggplot(aes(x = value, y = reorder(terms, abs(value)))) +
geom_point(aes(shape = chord_family), size = 3) +
theme_minimal() +
theme(legend.position="bottom") +
labs(y = "Chord", x = "Loading",
title = "Response Strategy: Experimental Prompt", shape = "Chord Category") -> pc1
#   scale_fill_manual(labels = c("Bridge Chords","Chromatic PDs","Common PDs","Non PDs"), values = c("green","black","blue","red")) +
pc1
ggsave(filename = "img/Figures/PC1.png",
height = 9, width = 5, dpi = 300, plot = pc1)
* PC2 is sensitivy to training, more evident through next chart
```{r}
tidied_pca2 %>%
filter(component %in% paste0("PC", 2)) %>%
mutate(component = fct_inorder(component)) %>%
ggplot(aes(x = value, y = reorder(terms, abs(value)), fill = chord_family)) +
geom_col() +
theme_minimal() +
scale_fill_manual(labels = c("Bridge Chords","Chromatic PDs","Common PDs","Non PDs"),
values = c("green","black","blue","red")) +
labs(y = "Chord", title = "PC2: Sensitivity to Training", fill = "Chord Family") -> pc2
pc2
ggsave(filename = "img/Figures/PC2.png", height = 6, width = 9, dpi = 300, plot = pc2)
ggsave(filename = "img/Figures/PC2.png", height = 6, width = 9, dpi = 300, plot = pc2)
Here we use loadings on each rating, plot PC1 vs PC2
```{r}
# PANEL 2
juice(pca_prep) %>%
mutate(group = str_replace_all(group, "upperclass","Junior/Senior")) %>%
mutate(group = str_to_title(group)) %>%
mutate(`Experimental Group` = str_to_title(group)) %>%
ggplot(aes(PC1, PC2,
shape = `Experimental Group`)) +
geom_point(alpha = 1) +
scale_shape_manual(values=c( 8, 13, 4))+
theme_minimal() +
theme(legend.position="bottom") +
labs(title = "Scores of Items from PCA Loadings",
x = "PC1: Predominant Attraction",
y = "PC2: Sensitivity to Music Theory Training",
shape = "Participant Group") -> pc1vpc2
pc1vpc2
ggsave(filename = "img/Figures/PC1vsPC2.png", height = 6, width = 9, dpi = 300, plot = pc1vpc2)
ggsave(filename = "img/Figures/PC1vsPC2.png", height = 6, width = 9, dpi = 300, plot = pc1vpc2)
#### Panel 3 for Manuscript
```{r}
# Make Panel
library(patchwork)
(pc1 + (pc1vpc2)) -> pca_panel
(pc1 + (pc1vpc2)) + plot_annotation(tag_levels = "A") -> pca_panel
ggsave(plot = pca_panel, filename = "img/Figures/PCA_Panel.png", height = 9, width = 12, dpi = 300)
ggsave(plot = pca_panel, filename = "img/Figures/Figure3.png", height = 9, width = 12, dpi = 300)
juice(pca_prep)
juice(pca_prep) %>%
mutate(group = str_replace_all(group, "upperclass","Junior/Senior")) %>%
mutate(group = str_to_title(group)) %>%
mutate(`Experimental Group` = str_to_title(group))
tidied_pca2
tidied_pca2 %>%
filter(component %in% paste0("PC", 1)) %>%
mutate(component = fct_inorder(component)) %>%
mutate(value = round(value, 3)) %>%
mutate(chord_family = str_replace_all(chord_family, "_"," ")) %>%
mutate(chord_family = str_to_title(chord_family)) %>%
mutate(chord_family = str_replace_all(chord_family,"Pd","PDs")) %>%
mutate(chord_family = str_replace_all(chord_family,"Common","Diatonic")) %>%
ggplot(aes(x = value, y = reorder(terms, abs(value)))) +
geom_point(aes(shape = chord_family), size = 3) +
theme_minimal() +
theme(legend.position="bottom") +
labs(y = "Chord", x = "Loading",
title = "Response Strategy: Experimental Prompt", shape = "Chord Category") -> pc1
#   scale_fill_manual(labels = c("Bridge Chords","Chromatic PDs","Common PDs","Non PDs"), values = c("green","black","blue","red")) +
pc1
ggsave(filename = "img/Figures/PC1.png",
height = 9, width = 5, dpi = 300, plot = pc1)
* PC2 is sensitivy to training, more evident through next chart
```{r}
tidied_pca2 %>%
filter(component %in% paste0("PC", 2)) %>%
mutate(component = fct_inorder(component)) %>%
ggplot(aes(x = value, y = reorder(terms, abs(value)), fill = chord_family)) +
geom_col() +
theme_minimal() +
scale_fill_manual(labels = c("Bridge Chords","Chromatic PDs","Common PDs","Non PDs"),
values = c("green","black","blue","red")) +
labs(y = "Chord", title = "PC2: Sensitivity to Training", fill = "Chord Family") -> pc2
pc2
ggsave(filename = "img/Figures/PC2.png", height = 6, width = 9, dpi = 300, plot = pc2)
ggsave(filename = "img/Figures/PC2.png", height = 6, width = 9, dpi = 300, plot = pc2)
Here we use loadings on each rating, plot PC1 vs PC2
```{r}
# PANEL 2
juice(pca_prep) %>%
mutate(group = str_replace_all(group, "upperclass","Junior/Senior")) %>%
mutate(group = str_to_title(group)) %>%
mutate(`Experimental Group` = str_to_title(group)) %>%
ggplot(aes(PC1, PC2,
shape = `Experimental Group`)) +
geom_point(alpha = 1) +
scale_shape_manual(values=c( 8, 13, 4))+
theme_minimal() +
theme(legend.position="bottom") +
labs(title = "Scores of Items from PCA Loadings",
x = "PC1: Predominant Attraction",
y = "PC2: Sensitivity to Music Theory Training",
shape = "Participant Group") -> pc1vpc2
pc1vpc2
ggsave(filename = "img/Figures/PC1vsPC2.png", height = 6, width = 9, dpi = 300, plot = pc1vpc2)
ggsave(filename = "img/Figures/PC1vsPC2.png", height = 6, width = 9, dpi = 300, plot = pc1vpc2)
#### Panel 3 for Manuscript
```{r}
# Make Panel
library(patchwork)
(pc1 + (pc1vpc2)) + plot_annotation(tag_levels = "A") -> pca_panel
ggsave(plot = pca_panel, filename = "img/Figures/Figure3.png", height = 9, width = 12, dpi = 300)
ggsave(plot = pca_panel, filename = "img/Figures/Figure3.png", height = 9, width = 12, dpi = 300)
library(cowplot)
cowplot::plot_grid(pc1, pc1vpc2)
cowplot::plot_grid(pc1, pc1vpc2,labels = "AUTO")
cowplot::plot_grid(pc1, pc1vpc2,labels = "AUTO", label_size = 24)
cowplot::plot_grid(pc1, pc1vpc2,labels = "AUTO", label_size = 24) -> pca_panel_2
ggsave(plot = pca_panel_2, filename = "img/Figures/Figure3cow.png", height = 9, width = 12, dpi = 300)
cowplot::plot_grid(pc1, pc1vpc2,labels = "AUTO", label_size = 40) -> pca_panel_2
ggsave(plot = pca_panel_2, filename = "img/Figures/Figure3cow.png", height = 9, width = 12, dpi = 300)
cowplot::plot_grid(pc1, pc1vpc2,labels = "AUTO", label_size = 24) -> pca_panel_2
ggsave(plot = pca_panel, filename = "img/Figures/Figure3.png", height = 9, width = 12, dpi = 300)
ggsave(plot = pca_panel_2, filename = "img/Figures/Figure3cow.png", height = 9, width = 12, dpi = 300)
citation(package = "multcomp")
levels(re.effects$data$term) <- c("Music Theory Training", "^4, ^#4, b^6, ^6" , "Descending-Fifths Root Motion",
"Semitonal Voice Leading","Chord Roughness","Chord Distance")
re.effects +
labs(title = "Musical Feature and Musical Training Model", subtitle = "Fixed Effects") +
theme_minimal() -> model_3_figure
model_3_figure
ggsave(plot = model_3_figure,
filename = "img/Figures/Figure_Model_Three_fixed_effects_.png",
height = 6, width = 9, units = "in", dpi = 300)
(analysis_a_plot_1 + descriptive_theory_plot )/ (rm_musical_plot + model_3_figure) +
plot_annotation(title = "Regression Model Analysis", tag_levels = "A") &
theme(plot.tag.position = c(0, 1),
plot.tag = element_text(size = 15, hjust = 0, vjust = 0)) -> compound_plot
compound_plot
ggsave(filename = "img/Figures/Figure2.png", height = 9, width = 13, units = "in", dpi = 300)
# ALL MODELS HERE
tab_model(chord_cat_rm, musical_training_rm, all_musical_indv_theory_model)
